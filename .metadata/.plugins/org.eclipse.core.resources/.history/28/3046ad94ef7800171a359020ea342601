package com.chinasofti.eecuser.tools.jdbc;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import oracle.jdbc.OracleTypes;

import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.CallableStatementCallback;
import org.springframework.jdbc.core.CallableStatementCreator;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.PreparedStatementCallback;
import org.springframework.jdbc.core.PreparedStatementCreator;

import com.chinasofti.eecuser.model.javabean.UserInfo;

public class JdbcTmpTest {
	private JdbcTemplate jt;

	public JdbcTemplate getJt() {
		return jt;
	}

	public void setJt(JdbcTemplate jt) {
		this.jt = jt;
	}
	
	// 动态sql查询
	public void testPrepareStatement(){
		PreparedStatementCreator psc;
		PreparedStatementCallback action;
		jt.execute(new PreparedStatementCreator(){

			@Override
			public PreparedStatement createPreparedStatement(Connection conn)
					throws SQLException {
				
			}
			
		}, new PreparedStatementCallback(){

			@Override
			public Object doInPreparedStatement(PreparedStatement pc)
					throws SQLException, DataAccessException {
				pc.execute();
				
				return null;
			}
			
		});
		
	}
	// 函数，存储过程查询
	
	public void testProcedure(){
		jt.execute(new CallableStatementCreator() {
			
			@Override
			public CallableStatement createCallableStatement(Connection arg0)
					throws SQLException {
				String sql = "{call testemp(?,?,?)}"; 
				CallableStatement pc = conn.prepareCall(sql);
				pc.setString(1, "1");
				pc.setString(2, "222");
				pc.registerOutParameter(2, OracleTypes.INTEGER);
				pc.registerOutParameter(3, OracleTypes.CURSOR);
				return pc;
			}
		}, new CallableStatementCallback<List<UserInfo>>() {

			@Override
			public List<UserInfo> doInCallableStatement(CallableStatement pc)
					throws SQLException, DataAccessException {
				pc.execute();
				ResultSet rs  = (ResultSet)pc.getObject(3);
				while(rs.next()){
					
				}
				
			}
		})
	
	}
	public List<UserInfo> queryOracle(final String name, final PageControllor pageControl) {
		 
		//调用Oracle函数
		return jt.execute( new CallableStatementCreator() {
			public CallableStatement createCallableStatement(Connection conn)
					throws SQLException {
				String sql="{?=call paging(?,?,?,?)}";
				CallableStatement call=conn.prepareCall(sql);
				call=conn.prepareCall(sql);
			    call.registerOutParameter(1, OracleTypes.CURSOR);
				call.registerOutParameter(5, OracleTypes.NUMBER);
				call.setInt(2, pageControl.getMax_cap());
				call.setInt(3, pageControl.getPageNo());
				call.setString(4, name);
				call.execute();
				return call;
			}
		}, new CallableStatementCallback<List<UserInfo>>() {
			@Override
			public List<UserInfo> doInCallableStatement(CallableStatement call)
					throws SQLException, DataAccessException {
			
	            //设置最大记录条数
				pageControl.setCount(call.getInt(5));
				 //更新最大页码
				pageControl.updateMax_page();
				//获取查询结果
				ResultSet rs =(ResultSet)call.getObject(1);
				List<UserInfo> list =new ArrayList<UserInfo>();
				while(rs.next()){
					UserInfo user = new UserInfo(rs.getString(1), rs.getString(2), rs.getInt(3), rs.getString(4), rs.getString(5));
					list.add(user);
				}
				return list;
			}
		});
	}
	
	
	
	
	public void testFunc(){
	}
	
	
}
